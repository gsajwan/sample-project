pipeline:
  name: Python-CI-CD
  identifier: Python_CI_CD
  projectIdentifier: MyProject
  orgIdentifier: MyOrg
  stages:
    - stage:
        name: Build and Test
        identifier: BuildAndTest
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: Install Dependencies
                  identifier: InstallDependencies
                  spec:
                    connectorRef: GitHubConnector
                    image: python:3.9-slim
                    shell: Bash
                    command: |
                      pip install -r requirements.txt

              - step:
                  type: Run
                  name: Run Tests
                  identifier: RunTests
                  spec:
                    connectorRef: GitHubConnector
                    image: python:3.9-slim
                    shell: Bash
                    command: |
                      pytest tests/ --junitxml=results.xml
    - stage:
        name: Deploy
        identifier: DeployStage
        type: CD
        spec:
          infrastructure:
            environmentRef: PythonEnv
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: K8sConnector
                namespace: default
          execution:
            steps:
              - step:
                  type: KubernetesApply
                  name: Deploy Application
                  identifier: DeployApp
                  spec:
                    filePaths:
                      - manifests/deployment.yaml
